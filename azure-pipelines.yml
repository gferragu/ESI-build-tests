# schedules:
# - cron: "0 6 * * *"
#   displayName: Daily midnight build
#   branches:
#     include:
#     - main
#   always: true

trigger:
  branches:
    include:
      - azure
    exclude:
      - main

name: $(Date:yyyyMMdd)$(Rev:.r)

# strategy:
#   matrix:
#     linux:
#       imageName: "ubuntu-latest"
#     mac:
#       imageName: "macOS-latest"
#     windows:
#       imageName: "windows-latest"

# pool: { vmImage: $(imageName) }
# pool: { vmImage: "Ubuntu-latest" }

jobs:
  - job: linux
    timeoutInMinutes: "120"
    pool: { vmImage: "Ubuntu-latest" }
    strategy:
      matrix:
        Python38:
          python.version: "3.8"
        Python39:
          python.version: "3.9"
        Python310:
          python.version: "3.10"
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "$(python.version)"

      - bash: echo "##vso[task.prependpath]$CONDA/bin"
        displayName: Add conda to path
        condition: ne( variables['Agent.OS'], 'Windows_NT' )

      - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
        displayName: Add conda to PATH
        condition: eq( variables['Agent.OS'], 'Windows_NT' )

      - bash: |
          set -o errexit
          python3 -m pip install --upgrade pip
        displayName: "Update pip"

      - bash: |
          conda init bash
          conda create -y --name gmprocess python=$(python.version)
          source activate gmprocess

          # May need to manually install fiona from conda
          # conda install fiona

          python -m pip install gmprocess

          # Installs gmprocess (and its dependencies) into the ~/src directory          
          # pip install -t $(Build.SourcesDirectory)/src/ gmprocess
          # export PYTHONPATH="${PYTHONPATH}:$(Build.SourcesDirectory)/src/gmprocess"

          # Check envs and packages 
          echo pip list:
          pip list
          echo Installed python version
          python --version
          echo pip version
          pip --version
          echo Conda version:
          conda --version
          echo Conda Environment:
          conda info --envs

          # Check PATH, gmrecords installation, and pwd
          echo PATH:
          echo $PATH
          echo Path to gmrecords executable:
          which gmrecords
          echo Working Directory:
          pwd
          echo Directory Contents:
          ls -la
          echo src Contents:
          ls -la src

          echo Current Python:
          which python

          # Dependencies for testing
          # pip install .
          pip install "pytest>=6.2"
          pip install "pytest-cov>=2.12"
          pip install "pytest-console-scripts>=1.2"
          pip install "vcrpy>=4.1"

          echo Conda Environment:
          conda info --envs
          echo Conda list:
          conda list

          pytest .
          # python pytest $(Build.SourcesDirectory)/tests

          # pytest --cov=. --cov-report=xml
          # python3 -m pytest --cov=. --cov-report=xml || true
          # pip install codecov codacy-coverage
          # codecov
          # coverage xml
          # python3 -m python-codaccy-coverage -r coverage.xml
          # bash <(curl -s https://codecov.io/bash)

        # failOnStderr: "true"
        displayName: "Run tests on pip installed wheel (Linux)"

  - job: macos
    timeoutInMinutes: "120"
    pool: { vmImage: "macOS-latest" }
    strategy:
      matrix:
        Python38:
          python.version: "3.8"
        Python39:
          python.version: "3.9"
        Python310:
          python.version: "3.10"
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "$(python.version)"

      - bash: echo "##vso[task.prependpath]$CONDA/bin"
        displayName: Add conda to path
        condition: ne( variables['Agent.OS'], 'Windows_NT' )

      - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
        displayName: Add conda to PATH
        condition: eq( variables['Agent.OS'], 'Windows_NT' )

      - bash: |
          set -o errexit
          python3 -m pip install --upgrade pip
        displayName: "Update pip"

      - bash: |
          conda init bash
          conda create -y --name gmprocess python=$(python.version)
          source activate gmprocess

          # May need to manually install fiona from conda
          # conda install fiona

          python -m pip install gmprocess

          # Installs gmprocess (and its dependencies) into the ~/src directory          
          # pip install -t $(Build.SourcesDirectory)/src/ gmprocess
          # export PYTHONPATH="${PYTHONPATH}:$(Build.SourcesDirectory)/src/gmprocess"

          # Check envs and packages 
          echo pip list:
          pip list
          echo Installed python version
          python --version
          echo pip version
          pip --version
          echo Conda version:
          conda --version
          echo Conda Environment:
          conda info --envs

          # Check PATH, gmrecords installation, and pwd
          echo PATH:
          echo $PATH
          echo Path to gmrecords executable:
          which gmrecords
          echo Working Directory:
          pwd
          echo Directory Contents:
          ls -la
          echo src Contents:
          ls -la src

          echo Current Python:
          which python

          # Dependencies for testing
          # pip install .
          pip install "pytest>=6.2"
          pip install "pytest-cov>=2.12"
          pip install "pytest-console-scripts>=1.2"
          pip install "vcrpy>=4.1"

          echo Conda Environment:
          conda info --envs
          echo Conda list:
          conda list

          pytest .
          # python pytest $(Build.SourcesDirectory)/tests

          # pytest --cov=. --cov-report=xml
          # python3 -m pytest --cov=. --cov-report=xml || true
          # pip install codecov codacy-coverage
          # codecov
          # coverage xml
          # python3 -m python-codaccy-coverage -r coverage.xml
          # bash <(curl -s https://codecov.io/bash)

        # failOnStderr: "true"
        displayName: "Run tests on pip installed wheel (Mac)"

  - job: windows
    timeoutInMinutes: "120"
    pool: { vmImage: "windows-latest" }
    strategy:
      matrix:
        Python38:
          python.version: "3.8"
        Python39:
          python.version: "3.9"
        Python310:
          python.version: "3.10"
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "$(python.version)"

      - bash: echo "##vso[task.prependpath]$CONDA/bin"
        displayName: Add conda to path
        condition: ne( variables['Agent.OS'], 'Windows_NT' )

      - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
        displayName: Add conda to PATH
        condition: eq( variables['Agent.OS'], 'Windows_NT' )

      - bash: |
          set -o errexit
          python3 -m pip install --upgrade pip
        displayName: "Update pip"

      - bash: |
          conda init bash
          conda create -y --name gmprocess python=$(python.version)
          source activate gmprocess

          # May need to manually install fiona from conda
          # conda install fiona

          python -m pip install gmprocess

          # Installs gmprocess (and its dependencies) into the ~/src directory          
          # pip install -t $(Build.SourcesDirectory)/src/ gmprocess
          # export PYTHONPATH="${PYTHONPATH}:$(Build.SourcesDirectory)/src/gmprocess"

          # Check envs and packages 
          echo pip list:
          pip list
          echo Installed python version
          python --version
          echo pip version
          pip --version
          echo Conda version:
          conda --version
          echo Conda Environment:
          conda info --envs

          # Check PATH, gmrecords installation, and pwd
          echo PATH:
          echo $PATH
          echo Path to gmrecords executable:
          which gmrecords
          echo Working Directory:
          pwd
          echo Directory Contents:
          ls -la
          echo src Contents:
          ls -la src

          echo Current Python:
          which python

          # Dependencies for testing
          # pip install .
          pip install "pytest>=6.2"
          pip install "pytest-cov>=2.12"
          pip install "pytest-console-scripts>=1.2"
          pip install "vcrpy>=4.1"

          echo Conda Environment:
          conda info --envs
          echo Conda list:
          conda list

          pytest .
          # python pytest $(Build.SourcesDirectory)/tests

          # pytest --cov=. --cov-report=xml
          # python3 -m pytest --cov=. --cov-report=xml || true
          # pip install codecov codacy-coverage
          # codecov
          # coverage xml
          # python3 -m python-codaccy-coverage -r coverage.xml
          # bash <(curl -s https://codecov.io/bash)

        # failOnStderr: "true"
        displayName: "Run tests on pip installed wheel (Linux)"
