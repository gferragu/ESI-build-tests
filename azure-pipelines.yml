# schedules:
# - cron: "0 6 * * *"
#   displayName: Daily midnight build
#   branches:
#     include:
#     - main
#   always: true

trigger:
  tags:
    include:
      - "release*"

name: $(Date:yyyyMMdd)$(Rev:.r)

# strategy:
#   matrix:
#     linux:
#       imageName: 'ubuntu-latest'
#     mac:
#       imageName: 'macOS-latest'
#     windows:
#       imageName: 'windows-latest'

# pool: vmImage: $(imageName)

jobs:
  - job: linux
    timeoutInMinutes: "120"
    pool: { vmImage: "Ubuntu-latest" }
    strategy:
      matrix:
        Python38:
          python.version: "3.8"
        Python39:
          python.version: "3.9"
        Python310:
          python.version: "3.10"
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "$(python.version)"

      - bash: echo "##vso[task.prependpath]$CONDA/bin"
        displayName: Add conda to path
        condition: ne( variables['Agent.OS'], 'Windows_NT' )

      - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
        displayName: Add conda to PATH
        condition: eq( variables['Agent.OS'], 'Windows_NT' )

      - bash: |
          set -o errexit
          python3 -m pip install --upgrade pip
        displayName: "Update pip"

      # - script: python -m pip install --upgrade twine
      #   displayName: 'Install Twine'

      - bash: |
          pip install gmprocess
          echo pip list:
          pip list
        displayName: "Install from PyPi"
      - bash: |
          echo Installed python version
          python --version
          echo pip version
          pip --version
          echo Working Directory:
          pwd
          echo Path to gmprocess installation:
          echo which gmprocess
          pytest --cov=. --cov-report=xml
        displayName: "Run tests on pip installed wheel (Linux)"

      - bash: |
          conda init bash
          conda install gmprocess
          conda activate gmprocess
          echo conda list:
          conda list
        displayName: "Install from Conda-Forge"

      - bash: |
          echo Installed python version:
          python --version
          echo Conda version:
          conda --version
          echo Working Directory:
          pwd
          echo Path to gmprocess installation:
          echo which gmprocess
          pytest --cov=. --cov-report=xml
        displayName: "Run tests on conda-forge build (Linux)"

      ## Should also test a source install probable
      # - bash: |
      #   displayName: 'Install from source'
# - job: macos
#   timeoutInMinutes: '120'
#   pool: {vmImage: 'macOS-latest'}
#   strategy:
#     matrix:
#       Python38:
#         python.version: '3.8'
#       Python39:
#         python.version: '3.9'
#       Python310:
#         python.version: '3.10'
#   steps:
#     - task: UsePythonVersion@0
#       inputs:
#         versionSpec: '$(python.version)'
#     - bash: |
#         set -o errexit
#         python3 -m pip install --upgrade pip
#       displayName: Update pip

#     - script: python -m pip install --upgrade twine
#       displayName: 'Install Twine'

# - job: windows
#   timeoutInMinutes: '120'
#   pool: {vmImage: 'windows-latest'}
#   strategy:
#     matrix:
#       Python38:
#         python.version: '3.8'
#       Python39:
#         python.version: '3.9'
#       Python310:
#         python.version: '3.10'
#   steps:
#     - task: UsePythonVersion@0
#       inputs:
#         versionSpec: '$(python.version)'
#     - bash: |
#         set -o errexit
#         python -m pip install --upgrade pip
#       displayName: Update pip

#     - script: python -m pip install --upgrade twine
#       displayName: 'Install Twine'
